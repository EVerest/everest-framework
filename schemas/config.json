{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "description": "Json schema of main EVerest config file",
    "$defs": {
        "config_map": {
            "type": "object",
            "description": "This is a config map.  Each property specifies one simple config option and will be validated agains the schema provided by the module's manifest file.",
            "patternProperties": {
                "^[a-zA-Z_][a-zA-Z0-9_.-]*$": {
                    "description": "A single config option",
                    "type": [
                        "boolean",
                        "integer",
                        "number",
                        "string"
                    ]
                }
            },
            "default": {},
            "additionalProperties": false
        }
    },
    "type": "object",
    "patternProperties": {
        "^[a-zA-Z_][a-zA-Z0-9_.-]*$": { // module id
            "description": "This are the required properties for every module id entry",
            "required": [
                "module"
            ],
            "properties": {
                "module": {
                    "description": "Module name (e.g. directory name in the modules subdirectory)",
                    "type": "string",
                    "pattern": "^[a-zA-Z_][a-zA-Z0-9_-]*$" // module name
                },
                "config_module": {
                    "description": "Config map for the module",
                    "$ref": "#/$defs/config_map"
                },
                "config_implementation": {
                    "description": "List of config maps for each implementation",
                    "type": "object",
                    "patternProperties": {
                        "^[a-zA-Z_][a-zA-Z0-9_.-]*$": { // implementation id
                            "description": "Config map for this implementation. ",
                            "$ref": "#/$defs/config_map" // arbitrary implementation config validated by our schema in the module manifest later on
                        }
                    },
                    "default": {}, // add empty config if not already present
                    "additionalProperties": false // don't allow arbitrary additional properties
                },
                "connections": {
                    "type": "object",
                    "description": "List of requirements: a mapping of all requirement ids listed in the module's manifest to module_id (declared in this file) and implementation_id (declared in manifest).",
                    "patternProperties": {
                        "^[a-zA-Z_][a-zA-Z0-9_.-]*$": { // requirement id
                            "type": "array",
                            "items": {
                                "type": "object",
                                "required": [
                                    "module_id",
                                    "implementation_id"
                                ],
                                "properties": {
                                    "module_id": {
                                        "description": "module_id this requirement id maps to",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z_][a-zA-Z0-9_.-]*$" // reference to module id
                                    },
                                    "implementation_id": {
                                        "description": "implementation_id this requirement id maps to",
                                        "type": "string",
                                        "pattern": "^[a-zA-Z_][a-zA-Z0-9_.-]*$" // reference to implementation id
                                    }
                                },
                                "additionalProperties": false // don't allow arbitrary additional properties
                            }
                        }
                    },
                    "default": {}, // add empty config if not already present
                    "additionalProperties": false // don't allow arbitrary additional properties
                }
            },
            "additionalProperties": false // don't allow arbitrary additional properties
        }
    },
    "default": {}, //add empty config dict if not already present
    "additionalProperties": false // don't allow arbitrary additional properties
}
