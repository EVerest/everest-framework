load("@rules_rust//rust:defs.bzl", "rust_binary", "rust_test")
load("@rules_rust//cargo:defs.bzl", "cargo_build_script")
load("@python3_10//:defs.bzl", "interpreter")
load("//bazel:everest_env.bzl", "everest_test", "everest_env")
load("//bazel:modules_def.bzl", "rs_everest_module")

cargo_build_script(
    name = "build_script",
    srcs = ["build.rs"],
    edition="2021",
    build_script_env = {
        "EVEREST_CORE_ROOT": "../..",
    },
    deps = [
        "@everest-framework//everestrs/everestrs-build",
    ],
    data= [
        "//everestrs/tests/types",
        "//everestrs/tests/interfaces",
        "//everestrs/tests/errors",
        "manifest.yaml",
    ],
)

rust_binary(
    name = "RsExampleBinary",
    srcs = glob(["src/**/*.rs"]),
    visibility = ["//visibility:public"],
    edition = "2021",
    deps = [
        "@crate_index//:log",
        "@everest-framework//everestrs/everestrs",
        "@everest-framework//everestrs/everestrs:everestrs_sys",
        "@everest-framework//everestrs/everestrs:everestrs_bridge",
        ":build_script",
    ],
)

rust_test(
    name = "RsExampleTest",
    edition="2021",
    deps = ["@crate_index//:mockall",],
    proc_macro_deps = ["@crate_index//:mockall_double",],
    srcs = [],
    crate_features = ["mockall", "mockall_double"],
    crate = ":RsExampleBinary",
)

rs_everest_module(
    name = "RsExample",
    binary = ":RsExampleBinary",
    manifest = "manifest.yaml",
)

everest_env(
    name = "integration_env",
    modules = [
        ":RsExample",
    ],
    config_file = "config.yaml",
    python_interpreter_target = interpreter,
)

everest_test(
    name = "integration_test",
    modules = [
        ":RsExample",
    ],
    config_file = "config.yaml",
    python_interpreter_target = interpreter,
    test_script = "test.sh",
    tags = ["exclusive"]
)
